// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/company": {
            "get": {
                "description": "GetCompanyByfilter retrieves companies based on the provided filter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get company by filter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "companyName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "franchiseName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ownerName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.GetCompaniesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "SaveCompany saves a new company using the provided DTO.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save a new company",
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.GenericCommandResponse"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "put": {
                "description": "UpdateCompany updates an existing company using the provided model.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated company data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/infra_model.CompanyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.GenericCommandResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CompanyDTO": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "object",
                    "properties": {
                        "franchises": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "location": {
                                        "type": "object",
                                        "properties": {
                                            "Address": {
                                                "type": "string"
                                            },
                                            "Country": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "zip_code": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "informacion": {
                            "type": "object",
                            "properties": {
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        },
                                        "zip_code": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "tax_number": {
                                    "type": "string"
                                }
                            }
                        },
                        "owner": {
                            "type": "object",
                            "properties": {
                                "contact": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                },
                                                "zip_code": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "phone": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "first_name": {
                                    "type": "string"
                                },
                                "last_name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "infra_model.CompanyModel": {
            "type": "object",
            "properties": {
                "franchises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/infra_model.Franchise"
                    }
                },
                "id": {
                    "type": "string"
                },
                "informacion": {
                    "$ref": "#/definitions/infra_model.Information"
                },
                "owner": {
                    "$ref": "#/definitions/infra_model.Owner"
                }
            }
        },
        "infra_model.Contact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "locationId": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "infra_model.Franchise": {
            "type": "object",
            "properties": {
                "locationId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "infra_model.Information": {
            "type": "object",
            "properties": {
                "locationId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tax_number": {
                    "type": "string"
                }
            }
        },
        "infra_model.Owner": {
            "type": "object",
            "properties": {
                "contact": {
                    "$ref": "#/definitions/infra_model.Contact"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "utils.GenericCommandResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "utils.GetCompaniesResponse": {
            "type": "object",
            "properties": {
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/infra_model.CompanyModel"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8888",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "ClubHub API",
	Description:      "Hoteld app for club management",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
